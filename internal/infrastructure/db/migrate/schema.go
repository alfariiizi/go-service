// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminAuditLogsColumns holds the columns for the "admin_audit_logs" table.
	AdminAuditLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "user_email", Type: field.TypeString},
		{Name: "operation", Type: field.TypeString},
		{Name: "model", Type: field.TypeString},
		{Name: "args", Type: field.TypeJSON},
		{Name: "result", Type: field.TypeJSON, Nullable: true},
		{Name: "query", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "params", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "source", Type: field.TypeString, Default: "admin-panel"},
		{Name: "duration_ms", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// AdminAuditLogsTable holds the schema information for the "admin_audit_logs" table.
	AdminAuditLogsTable = &schema.Table{
		Name:       "admin_audit_logs",
		Columns:    AdminAuditLogsColumns,
		PrimaryKey: []*schema.Column{AdminAuditLogsColumns[0]},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "brand", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "creator_id", Type: field.TypeUUID},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_users_products",
				Columns:    []*schema.Column{ProductsColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "refresh_token", Type: field.TypeString, Unique: true},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "device_id", Type: field.TypeString, Nullable: true},
		{Name: "number_of_uses", Type: field.TypeUint64, Default: 0},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "last_used_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "revoked_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_users_sessions",
				Columns:    []*schema.Column{SessionsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "password_hash", Type: field.TypeString},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"USER", "ADMIN", "SUPERADMIN"}},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminAuditLogsTable,
		ProductsTable,
		SessionsTable,
		UsersTable,
	}
)

func init() {
	ProductsTable.ForeignKeys[0].RefTable = UsersTable
	SessionsTable.ForeignKeys[0].RefTable = UsersTable
}
