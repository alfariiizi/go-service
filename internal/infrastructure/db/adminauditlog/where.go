// Code generated by ent, DO NOT EDIT.

package adminauditlog

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/alfariiizi/vandor/internal/infrastructure/db/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldID, id))
}

// UserEmail applies equality check predicate on the "user_email" field. It's identical to UserEmailEQ.
func UserEmail(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldUserEmail, v))
}

// Operation applies equality check predicate on the "operation" field. It's identical to OperationEQ.
func Operation(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldOperation, v))
}

// Model applies equality check predicate on the "model" field. It's identical to ModelEQ.
func Model(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldModel, v))
}

// Query applies equality check predicate on the "query" field. It's identical to QueryEQ.
func Query(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldQuery, v))
}

// Params applies equality check predicate on the "params" field. It's identical to ParamsEQ.
func Params(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldParams, v))
}

// Source applies equality check predicate on the "source" field. It's identical to SourceEQ.
func Source(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldSource, v))
}

// DurationMs applies equality check predicate on the "duration_ms" field. It's identical to DurationMsEQ.
func DurationMs(v int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldDurationMs, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldCreatedAt, v))
}

// UserEmailEQ applies the EQ predicate on the "user_email" field.
func UserEmailEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldUserEmail, v))
}

// UserEmailNEQ applies the NEQ predicate on the "user_email" field.
func UserEmailNEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldUserEmail, v))
}

// UserEmailIn applies the In predicate on the "user_email" field.
func UserEmailIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldUserEmail, vs...))
}

// UserEmailNotIn applies the NotIn predicate on the "user_email" field.
func UserEmailNotIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldUserEmail, vs...))
}

// UserEmailGT applies the GT predicate on the "user_email" field.
func UserEmailGT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldUserEmail, v))
}

// UserEmailGTE applies the GTE predicate on the "user_email" field.
func UserEmailGTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldUserEmail, v))
}

// UserEmailLT applies the LT predicate on the "user_email" field.
func UserEmailLT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldUserEmail, v))
}

// UserEmailLTE applies the LTE predicate on the "user_email" field.
func UserEmailLTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldUserEmail, v))
}

// UserEmailContains applies the Contains predicate on the "user_email" field.
func UserEmailContains(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContains(FieldUserEmail, v))
}

// UserEmailHasPrefix applies the HasPrefix predicate on the "user_email" field.
func UserEmailHasPrefix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasPrefix(FieldUserEmail, v))
}

// UserEmailHasSuffix applies the HasSuffix predicate on the "user_email" field.
func UserEmailHasSuffix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasSuffix(FieldUserEmail, v))
}

// UserEmailEqualFold applies the EqualFold predicate on the "user_email" field.
func UserEmailEqualFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEqualFold(FieldUserEmail, v))
}

// UserEmailContainsFold applies the ContainsFold predicate on the "user_email" field.
func UserEmailContainsFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContainsFold(FieldUserEmail, v))
}

// OperationEQ applies the EQ predicate on the "operation" field.
func OperationEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldOperation, v))
}

// OperationNEQ applies the NEQ predicate on the "operation" field.
func OperationNEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldOperation, v))
}

// OperationIn applies the In predicate on the "operation" field.
func OperationIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldOperation, vs...))
}

// OperationNotIn applies the NotIn predicate on the "operation" field.
func OperationNotIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldOperation, vs...))
}

// OperationGT applies the GT predicate on the "operation" field.
func OperationGT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldOperation, v))
}

// OperationGTE applies the GTE predicate on the "operation" field.
func OperationGTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldOperation, v))
}

// OperationLT applies the LT predicate on the "operation" field.
func OperationLT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldOperation, v))
}

// OperationLTE applies the LTE predicate on the "operation" field.
func OperationLTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldOperation, v))
}

// OperationContains applies the Contains predicate on the "operation" field.
func OperationContains(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContains(FieldOperation, v))
}

// OperationHasPrefix applies the HasPrefix predicate on the "operation" field.
func OperationHasPrefix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasPrefix(FieldOperation, v))
}

// OperationHasSuffix applies the HasSuffix predicate on the "operation" field.
func OperationHasSuffix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasSuffix(FieldOperation, v))
}

// OperationEqualFold applies the EqualFold predicate on the "operation" field.
func OperationEqualFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEqualFold(FieldOperation, v))
}

// OperationContainsFold applies the ContainsFold predicate on the "operation" field.
func OperationContainsFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContainsFold(FieldOperation, v))
}

// ModelEQ applies the EQ predicate on the "model" field.
func ModelEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldModel, v))
}

// ModelNEQ applies the NEQ predicate on the "model" field.
func ModelNEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldModel, v))
}

// ModelIn applies the In predicate on the "model" field.
func ModelIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldModel, vs...))
}

// ModelNotIn applies the NotIn predicate on the "model" field.
func ModelNotIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldModel, vs...))
}

// ModelGT applies the GT predicate on the "model" field.
func ModelGT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldModel, v))
}

// ModelGTE applies the GTE predicate on the "model" field.
func ModelGTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldModel, v))
}

// ModelLT applies the LT predicate on the "model" field.
func ModelLT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldModel, v))
}

// ModelLTE applies the LTE predicate on the "model" field.
func ModelLTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldModel, v))
}

// ModelContains applies the Contains predicate on the "model" field.
func ModelContains(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContains(FieldModel, v))
}

// ModelHasPrefix applies the HasPrefix predicate on the "model" field.
func ModelHasPrefix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasPrefix(FieldModel, v))
}

// ModelHasSuffix applies the HasSuffix predicate on the "model" field.
func ModelHasSuffix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasSuffix(FieldModel, v))
}

// ModelEqualFold applies the EqualFold predicate on the "model" field.
func ModelEqualFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEqualFold(FieldModel, v))
}

// ModelContainsFold applies the ContainsFold predicate on the "model" field.
func ModelContainsFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContainsFold(FieldModel, v))
}

// ResultIsNil applies the IsNil predicate on the "result" field.
func ResultIsNil() predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIsNull(FieldResult))
}

// ResultNotNil applies the NotNil predicate on the "result" field.
func ResultNotNil() predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotNull(FieldResult))
}

// QueryEQ applies the EQ predicate on the "query" field.
func QueryEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldQuery, v))
}

// QueryNEQ applies the NEQ predicate on the "query" field.
func QueryNEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldQuery, v))
}

// QueryIn applies the In predicate on the "query" field.
func QueryIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldQuery, vs...))
}

// QueryNotIn applies the NotIn predicate on the "query" field.
func QueryNotIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldQuery, vs...))
}

// QueryGT applies the GT predicate on the "query" field.
func QueryGT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldQuery, v))
}

// QueryGTE applies the GTE predicate on the "query" field.
func QueryGTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldQuery, v))
}

// QueryLT applies the LT predicate on the "query" field.
func QueryLT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldQuery, v))
}

// QueryLTE applies the LTE predicate on the "query" field.
func QueryLTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldQuery, v))
}

// QueryContains applies the Contains predicate on the "query" field.
func QueryContains(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContains(FieldQuery, v))
}

// QueryHasPrefix applies the HasPrefix predicate on the "query" field.
func QueryHasPrefix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasPrefix(FieldQuery, v))
}

// QueryHasSuffix applies the HasSuffix predicate on the "query" field.
func QueryHasSuffix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasSuffix(FieldQuery, v))
}

// QueryIsNil applies the IsNil predicate on the "query" field.
func QueryIsNil() predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIsNull(FieldQuery))
}

// QueryNotNil applies the NotNil predicate on the "query" field.
func QueryNotNil() predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotNull(FieldQuery))
}

// QueryEqualFold applies the EqualFold predicate on the "query" field.
func QueryEqualFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEqualFold(FieldQuery, v))
}

// QueryContainsFold applies the ContainsFold predicate on the "query" field.
func QueryContainsFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContainsFold(FieldQuery, v))
}

// ParamsEQ applies the EQ predicate on the "params" field.
func ParamsEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldParams, v))
}

// ParamsNEQ applies the NEQ predicate on the "params" field.
func ParamsNEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldParams, v))
}

// ParamsIn applies the In predicate on the "params" field.
func ParamsIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldParams, vs...))
}

// ParamsNotIn applies the NotIn predicate on the "params" field.
func ParamsNotIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldParams, vs...))
}

// ParamsGT applies the GT predicate on the "params" field.
func ParamsGT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldParams, v))
}

// ParamsGTE applies the GTE predicate on the "params" field.
func ParamsGTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldParams, v))
}

// ParamsLT applies the LT predicate on the "params" field.
func ParamsLT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldParams, v))
}

// ParamsLTE applies the LTE predicate on the "params" field.
func ParamsLTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldParams, v))
}

// ParamsContains applies the Contains predicate on the "params" field.
func ParamsContains(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContains(FieldParams, v))
}

// ParamsHasPrefix applies the HasPrefix predicate on the "params" field.
func ParamsHasPrefix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasPrefix(FieldParams, v))
}

// ParamsHasSuffix applies the HasSuffix predicate on the "params" field.
func ParamsHasSuffix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasSuffix(FieldParams, v))
}

// ParamsIsNil applies the IsNil predicate on the "params" field.
func ParamsIsNil() predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIsNull(FieldParams))
}

// ParamsNotNil applies the NotNil predicate on the "params" field.
func ParamsNotNil() predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotNull(FieldParams))
}

// ParamsEqualFold applies the EqualFold predicate on the "params" field.
func ParamsEqualFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEqualFold(FieldParams, v))
}

// ParamsContainsFold applies the ContainsFold predicate on the "params" field.
func ParamsContainsFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContainsFold(FieldParams, v))
}

// SourceEQ applies the EQ predicate on the "source" field.
func SourceEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldSource, v))
}

// SourceNEQ applies the NEQ predicate on the "source" field.
func SourceNEQ(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldSource, v))
}

// SourceIn applies the In predicate on the "source" field.
func SourceIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldSource, vs...))
}

// SourceNotIn applies the NotIn predicate on the "source" field.
func SourceNotIn(vs ...string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldSource, vs...))
}

// SourceGT applies the GT predicate on the "source" field.
func SourceGT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldSource, v))
}

// SourceGTE applies the GTE predicate on the "source" field.
func SourceGTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldSource, v))
}

// SourceLT applies the LT predicate on the "source" field.
func SourceLT(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldSource, v))
}

// SourceLTE applies the LTE predicate on the "source" field.
func SourceLTE(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldSource, v))
}

// SourceContains applies the Contains predicate on the "source" field.
func SourceContains(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContains(FieldSource, v))
}

// SourceHasPrefix applies the HasPrefix predicate on the "source" field.
func SourceHasPrefix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasPrefix(FieldSource, v))
}

// SourceHasSuffix applies the HasSuffix predicate on the "source" field.
func SourceHasSuffix(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldHasSuffix(FieldSource, v))
}

// SourceEqualFold applies the EqualFold predicate on the "source" field.
func SourceEqualFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEqualFold(FieldSource, v))
}

// SourceContainsFold applies the ContainsFold predicate on the "source" field.
func SourceContainsFold(v string) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldContainsFold(FieldSource, v))
}

// DurationMsEQ applies the EQ predicate on the "duration_ms" field.
func DurationMsEQ(v int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldDurationMs, v))
}

// DurationMsNEQ applies the NEQ predicate on the "duration_ms" field.
func DurationMsNEQ(v int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldDurationMs, v))
}

// DurationMsIn applies the In predicate on the "duration_ms" field.
func DurationMsIn(vs ...int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldDurationMs, vs...))
}

// DurationMsNotIn applies the NotIn predicate on the "duration_ms" field.
func DurationMsNotIn(vs ...int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldDurationMs, vs...))
}

// DurationMsGT applies the GT predicate on the "duration_ms" field.
func DurationMsGT(v int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldDurationMs, v))
}

// DurationMsGTE applies the GTE predicate on the "duration_ms" field.
func DurationMsGTE(v int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldDurationMs, v))
}

// DurationMsLT applies the LT predicate on the "duration_ms" field.
func DurationMsLT(v int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldDurationMs, v))
}

// DurationMsLTE applies the LTE predicate on the "duration_ms" field.
func DurationMsLTE(v int) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldDurationMs, v))
}

// DurationMsIsNil applies the IsNil predicate on the "duration_ms" field.
func DurationMsIsNil() predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIsNull(FieldDurationMs))
}

// DurationMsNotNil applies the NotNil predicate on the "duration_ms" field.
func DurationMsNotNil() predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotNull(FieldDurationMs))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.FieldLTE(FieldCreatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.AdminAuditLog) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.AdminAuditLog) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.AdminAuditLog) predicate.AdminAuditLog {
	return predicate.AdminAuditLog(sql.NotPredicates(p))
}
