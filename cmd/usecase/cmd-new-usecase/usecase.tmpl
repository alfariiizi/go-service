package usecase

import (
	"context"

	"{{.ModuleName}}/internal/core/model"
	"{{.ModuleName}}/internal/core/repository"
)

type {{.Name}}Input struct {
	// TODO: Define fields
}
type {{.Name}}Output struct {
	// TODO: Define fields
}
type {{.Name}} model.Usecase[{{.Name}}Input, {{.Name}}Output]

type {{.Receiver}} struct {
	client *repository.Client
}

func New{{.Name}}(repo *repository.Client) {{.Name}} {
	return &{{.Receiver}}{
		client: repo,
	}
}

func (uc *{{.Receiver}}) Execute(ctx context.Context, input {{.Name}}Input) (*{{.Name}}Output, error) {
	// TODO: Implement logic

	return &{{.Name}}Output{}, nil
}
