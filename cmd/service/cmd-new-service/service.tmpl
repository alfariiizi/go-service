package {{.ServiceName}}_service

import (
	"context"

	"github.com/alfariiizi/go-service/internal/core/model"
	"github.com/alfariiizi/go-service/internal/core/repository"
	"github.com/alfariiizi/go-service/internal/core/usecase"
	"github.com/alfariiizi/go-service/internal/types"
)

type {{.Name}}Input struct {
	// TODO: Define fields
}
type {{.Name}}Output struct {
	// TODO: Define fields
}
type {{.Name}} model.Service[{{.Name}}Input, {{.Name}}Output]

type {{.Receiver}} struct {
	client  *repository.Client
	usecase *usecase.Usecases
}

func New{{.Name}}(
        repo *repository.Client,
	usecase *usecase.Usecases,
) {{.Name}} {
	return &{{.Receiver}}{
		client: repo,
		usecase: usecase,
	}
}

func (s *{{.Receiver}}) Execute(ctx context.Context, input {{.Name}}Input) types.Result[{{.Name}}Output]  {
	// TODO: Implement logic

	return types.Ok({{.Name}}Output{})
}
